<project name="ReleasePlanner" default="compile" basedir="." xmlns:jacoco="antlib:org.jacoco.ant">
	
<!-- ##############################################
  Path to Major and Mutation options 
  Use -Dmutation="=mml-file" to set path to mml-file
  ############################################## -->
  <property name="mutation" value=":NONE"/>
  <property name="mutator" value="-XMutator${mutation}"/>
  <property name="major" value="../../javac"/>


  <!-- SETUP VARIABLES AND PATHS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <property name="" value="" />

  <property name="lib.dir" value="lib" />
  <property name="src.dir" location="src/" />
  <property name="build.dir" location="bin/" />
  <property name="dist.dir" location="dist/" />
  <property name="dist.name" value="ReleasePlanner" />
  <property name="config.logging.dir" value="config/logging" />
  <property name="config.dir" value="config" />
  <property name="version" value="1.0" />

  <!-- Load the log4j properties -->
  <loadproperties>
  	<file file="config/logging/log4j.properties" />
  </loadproperties>

  <!-- The standard classpath for building the system -->
  <path id="build.classpath">
  	<fileset dir="${lib.dir}" includes="*.jar" />
  </path>

  <!-- The classpath for running the system -->
  <path id="run.classpath">
  	<pathelement path="${build.dir}"/>
  	<fileset dir="${lib.dir}" includes="*.jar"/>
  </path>

  <!--The classpath for running a task and including the log4j properties-->
  <path id="run.classpath.logging">
  	<pathelement path="${build.dir}"/>
  	<file file="${config.logging.dir}" />
  	<fileset dir="${lib.dir}" includes="*.jar"/>
    <fileset dir="../../config" includes="*.jar" />
  </path>

  <property name="result.dir" location="./bin" />
  <property name="result.classes.dir" location="${result.dir}/" />
  <property name="result.report.dir" location="${result.dir}/site/jacoco" />
  <property name="result.exec.file" location="${result.dir}/jacoco.exec" />

  <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
  	<classpath path="${lib.dir}/jacocoant.jar"/>
  </taskdef>

  <!-- BASIC TARGETS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

  <!-- CLEANING TASK - "ant clean" -->
  <target name="clean">
  	<delete dir="${build.dir}"/>
  	<delete dir="${dist.dir}"/>
  	<delete dir="${result.dir}"/>
  	<delete> 
  		<fileset dir="." includes="*.csv"/>
        <fileset dir="." includes="*.log"/>
  	</delete>
  </target>

<!-- Target to initialize build -->
    <target name="init">
        <mkdir dir="bin"/>
    </target>

  <!-- COMPILING TASK - "ant compile" -->  
  <target name="compile" depends="init" description="Compile">
  	<javac srcdir="${src.dir}" 
  			destdir="${build.dir}" 
  			includeantruntime="false" 
  			debug="true" 
  			debuglevel="vars,lines,source"
  			fork="yes"
  			executable="${major}">
  		<classpath refid="build.classpath"/>
  		<compilerarg value="-Xlint:unchecked"/> 
  		<compilerarg value="-Xlint:deprecation"/>
  		<compilerarg value="${mutator}"/> 
  	</javac>
  </target>

  <!-- RUNNING TASK - "ant run" -->
  <target name="run">
  	<antcall target="releaseplanner">
  	</antcall>
  </target>

  <!-- RUNNING TASK - "ant releaseplanner" -->
  <target name="releaseplanner">
  	<java fork="true" classname="releaseplanner.ReleasePlanner" maxmemory="4096m">
  		<arg line="${args}"/>
  		<classpath refid="run.classpath" />
  		<arg value="" /> 
  	</java>
  </target>

  <!-- RUNNING TASK - "ant releaseui" -->
  <target name="releaseui">
  	<java fork="true" classname="releaseplanner.ReleaseUI" maxmemory="4096m">
  		<arg line="${args}"/>
  		<classpath refid="run.classpath" />
  		<arg value="" /> 
  	</java>
  </target>

<!-- The adapted mutation test target -->
  <target name="mutation.test" depends="compile" description="Run mutation analysis for all unit test cases">
  	<echo message="Running mutation analysis ..."/>
  	<junit  printsummary="false" 
        	showoutput="false" 
            mutationAnalysis="true"
            resultFile="results.csv" 
            killDetailsFile="kill.csv">
  		<test name="releaseplanner.AllTests" />
  		<classpath refid="run.classpath.logging" />
  		<formatter type="plain" usefile="false" />
  	</junit>
  </target>

  <!-- RUNNING TASK - "ant test" -->
  <target name="test" depends="compile" description="Run all unit test cases">
  	<echo message="Running unit tests ..."/>
  	<junit fork="yes"
  			printsummary="true" 
        	showoutput="true" 
            haltonfailure="false">
  		<test name="releaseplanner.AllTests" />
  		<classpath refid="run.classpath.logging" />
      <classpath refid="" />
  		<formatter type="plain" usefile="false" />
  	</junit>
  </target>

  <!-- RUNNING TASK - "ant coveragetest" -->
  <target name="coveragetest" depends="compile">
  	<jacoco:coverage destfile="${result.exec.file}">
  		<junit fork="yes" forkmode="once">
  			<test name="releaseplanner.AllTests" />
  			<classpath refid="run.classpath" />
  			<formatter type="brief" usefile="false" />
  		</junit>
  	</jacoco:coverage>
  </target>

  <!-- RUNNING TASK - "ant coverage" -->
  <target name="coverage" depends="coveragetest">
  	<jacoco:report>
  		<executiondata>
  			<file file="${result.exec.file}" />
  		</executiondata>

  		<structure name="Release Planner Coverage Report">
  			<classfiles>
  				<fileset dir="${result.classes.dir}" />
  			</classfiles>
  			<sourcefiles encoding="UTF-8">
  				<fileset dir="${src.dir}" />
  			</sourcefiles>
  		</structure>

  		<html destdir="${result.report.dir}/AllTests/" />
  		<csv destfile="${result.report.dir}/AllTests/report.csv" />
  		<xml destfile="${result.report.dir}/AllTests/report.xml" />
  	</jacoco:report>
  </target>

  <!-- GENERATING JAVADOC - Generated on every build -->
  <target name="javadoc" depends="coveragetest">
  	<javadoc packagenames="releaseplanner.*"
  		sourcepath="src"
  		excludepackagenames=""
  		defaultexcludes="yes"
  		destdir="bin/api"
  		author="true"
  		version="true"
  		use="true"
  		windowtitle="Release Planner API">
  		<doctitle><![CDATA[<h1>Data Generator API</h1>]]></doctitle>
  		<bottom><![CDATA[<i>Copyright &#169; 2013 Dibyo Mukherjee, Kara King,Shane Regel, Brian Graham, Erich Harekma. All Rights Reserved.</i>]]></bottom>
  		<tag name="todo" scope="all" description="To do:"/>
  		<link offline="true" href="http://docs.oracle.com/javase/7/docs/api/" packagelistLoc="C:\tmp"/>
  		<link href="http://docs.oracle.com/javase/7/docs/api/"/>
  	</javadoc>
  </target>
  </project>
