\documentclass{article}

\begin{document}
Laboratory Assignment $\#$ 5
\\
Andreas Landgrebe
\\
Ian Macmillan
\\
Tristan Challener
\\
Matt Hajduk
\\
Ryan Mong 
\\
\begin{center}
\textbf{Input}
\end{center}

As part of the inputs for this Laboratory assignment, we have created a main class called ReleasePlanner. In this class, we have created a method called nextRelease that will have 4 parameters of List R, List B, List C, and int w. As input, we are using each list for a different task. For List R, we have assigned that to be the set of requirements. For List B, we have assigned that to be the benefit. For List C, we have assigned that to be the cost. For List C, we have arranged the method to be so that for a new List P per C, we have assigned that to be the list of profits which will have the list of requirements for list C to be subtracted from the list of requirements for list B. After this, we have had the int w to be assignment to do total weight allowed.
\\
\\
After this, we have set up another method called solverBFS.   
\\
\\
In this laboratory assignment, each group member has given a different task to be able to complete this assignment at the proper time. In order to complete this assignment at the correct time, that group must split up the work and each group member will need to know what to accomplish in order to complete this assignment at the correct time. If we as a group did not split up the work, then this laboratory assignment will not be completed at the correct time.
\\
Andreas and Ryan were given the task to write the test suites and the requirements document. Andreas and Ryan was acting as the administration and testers to complete this laboratory assignment at the correct time. Andreas and Ryan are able to organize the requirements so the group knows what needs to be accomplished at the end. As Andreas and Ryan are acting as testers, we are able to test the full system to make that it can large instances of the next release problem at the shortest amount of time. 
\\
\\
Ian was given the task to learn and use the JCommander tool to make sure that all of the command-line arguments are recognized and verified to be able to efficiently solve large instances of the next release problem. Ian is acting as the tool smith. As Ian was acting as the tool smith, he is able to use this new tool in order to parse command line parameters in order to recognize and verify these arguments.
\\
\\
Matt and Tristan acted as co-pilots to ensure that this assignment is complete properly and correctly. They will be working on the working methods. 

1. Introduction to the Document

\tab1.1 Purpose of the product
	
\tab1.2 Scope of the Product

\tab1.3 Acronyms, Abbreviations, Defnitions

\tab1.4 References

\tab1.5 Outline of the rest of the SRS

2. General Description of the Product

\tab2.1 Context of Product

\end{document}
